{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Marquis\\\\quiz-only\\\\client\\\\src\\\\components\\\\Login.js\";\n\n/* import React, { Fragment, Component } from 'react'; */\nimport { Helmet } from 'react-helmet';\nimport axios from 'axios';\nimport React, { Component, Fragment } from 'react';\nconst initialState = {\n  matric: \"\",\n  password: \"\",\n  matricError: \"\",\n  passwordError: \"\"\n};\n\nclass Login extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = initialState;\n\n    this.handleChange = event => {\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n    };\n\n    this.validate = () => {\n      let matricError = \"\";\n      let passwordError = \"\";\n\n      if (!this.state.matric) {\n        matricError = \"Matric cannot be blank\";\n      }\n\n      if (!this.state.password) {\n        passwordError = \"Password cannot be blank\";\n      }\n\n      if (matricError || passwordError) {\n        this.setState({\n          matricError,\n          passwordError\n        });\n        return false;\n      }\n\n      return true;\n    };\n\n    this.handleSubmit = event => {\n      event.preventDefault();\n      const isValid = this.validate();\n\n      if (isValid) {\n        const payload = {\n          matric: this.state.matric,\n          password: this.state.password\n        };\n        axios({\n          url: \"/user/play/login\",\n          method: \"POST\",\n          data: payload,\n          withCredentials: true\n        }).then(() => {\n          console.log('Congratulations You are Sucessfully Logged In');\n          this.props.history.push('/user/play/quiz');\n        }).catch(() => {\n          console.log('Sorry!! Unable To Login');\n          this.props.history.push('/user/play/login');\n        });\n        /*  console.log(this.state); */\n        //Clear form\n\n        this.setState(initialState);\n      }\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 10\n      }\n    }, /*#__PURE__*/React.createElement(Helmet, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 10\n      }\n    }, /*#__PURE__*/React.createElement(\"title\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 18\n      }\n    }, \"Nimelssa Quiz - Login page\")), /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 10\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 10\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col s12 m4 offset-m4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 10\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card z-depth-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card-content black white-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 16\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"card-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 19\n      }\n    }, \"Login\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card-content\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 16\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-field\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"material-icons prefix\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 21\n      }\n    }, \"account_circle\"), /*#__PURE__*/React.createElement(\"input\", {\n      className: \"validate\",\n      placeholder: \"Enter Matric Number\",\n      id: \"matric\",\n      type: \"number\",\n      name: \"matric\",\n      value: this.state.matric,\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        color: \"red\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 20\n      }\n    }, this.state.matricError), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"matric\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 21\n      }\n    }, \"Matric Number\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-field\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"material-icons prefix\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 21\n      }\n    }, \"lock\"), /*#__PURE__*/React.createElement(\"input\", {\n      className: \"validate\",\n      placeholder: \"Enter Password\",\n      id: \"password\",\n      type: \"password\",\n      name: \"password\",\n      value: this.state.password,\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        color: \"red\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 19\n      }\n    }, this.state.passwordError), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"password\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 21\n      }\n    }, \"Password\")), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 20\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 21\n      }\n    }, \"\\xA0\", /*#__PURE__*/React.createElement(\"button\", {\n      style: {\n        width: 100\n      },\n      className: \"waves-effect waves-light btn blue\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 28\n      }\n    }, \"Sign In\"))), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 25\n      }\n    })))))));\n  }\n\n}\n\nexport default Login;","map":{"version":3,"sources":["C:/Users/Marquis/quiz-only/client/src/components/Login.js"],"names":["Helmet","axios","React","Component","Fragment","initialState","matric","password","matricError","passwordError","Login","state","handleChange","event","setState","target","name","value","validate","handleSubmit","preventDefault","isValid","payload","url","method","data","withCredentials","then","console","log","props","history","push","catch","render","color","width"],"mappings":"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","sourcesContent":["/* import React, { Fragment, Component } from 'react'; */\r\nimport { Helmet } from 'react-helmet';\r\nimport axios from 'axios';\r\nimport React, {Component, Fragment} from 'react';\r\n\r\nconst initialState = {\r\n  matric: \"\",\r\n  password: \"\",\r\n  matricError: \"\",\r\n  passwordError: \"\"\r\n}\r\n\r\nclass Login extends Component{\r\n  state = initialState;\r\n\r\n  handleChange = event => {\r\n    this.setState({\r\n      [event.target.name] : event.target.value\r\n    });\r\n  };\r\n\r\n  validate = () =>{\r\n    let matricError = \"\";\r\n    let passwordError = \"\"\r\n  \r\n    if(!this.state.matric){\r\n      matricError = \"Matric cannot be blank\";\r\n    }\r\n  \r\n    if(!this.state.password){\r\n      passwordError = \"Password cannot be blank\";\r\n    } \r\n  \r\n    if(matricError || passwordError){\r\n      this.setState({matricError, passwordError});\r\n      return false; \r\n    }\r\n     return true;\r\n  }\r\n\r\n  handleSubmit = (event) =>{\r\n    event.preventDefault();\r\n    const isValid = this.validate(); \r\n    if (isValid){\r\n    \r\n        const payload = {\r\n          matric: this.state.matric,\r\n          password: this.state.password\r\n        };\r\n    \r\n        axios({\r\n          url: \"/user/play/login\",\r\n          method: \"POST\",\r\n          data: payload,\r\n          withCredentials: true\r\n        })\r\n        .then(()=>{\r\n          console.log('Congratulations You are Sucessfully Logged In');\r\n          this.props.history.push('/user/play/quiz')\r\n        })\r\n        .catch(()=>{\r\n          console.log('Sorry!! Unable To Login');\r\n          this.props.history.push('/user/play/login')\r\n        }) \r\n       /*  console.log(this.state); */\r\n        //Clear form\r\n        this.setState(initialState);\r\n    }\r\n      };\r\n  \r\n    render(){\r\n       return(\r\n         <Fragment>\r\n         <Helmet><title>Nimelssa Quiz - Login page</title></Helmet>\r\n         <form onSubmit={this.handleSubmit}>\r\n         <div className=\"row\">\r\n         <div className=\"col s12 m4 offset-m4\"> \r\n            <div className=\"card z-depth-4\">\r\n               <div className=\"card-content black white-text\">\r\n                  <span className=\"card-title\">Login</span>\r\n               </div>\r\n               <div className=\"card-content\">\r\n   \r\n                  <div className=\"input-field\">\r\n                    <i className=\"material-icons prefix\">account_circle</i>\r\n                    <input \r\n                    className=\"validate\"\r\n                     placeholder=\"Enter Matric Number\"\r\n                    id=\"matric\" \r\n                    type=\"number\"\r\n                    name=\"matric\" \r\n                    value={this.state.matric}\r\n                    onChange={this.handleChange}\r\n                    />\r\n                   <div style={{ color : \"red\" }}>\r\n                      {this.state.matricError}\r\n                  </div>\r\n                    <label htmlFor=\"matric\">Matric Number</label>\r\n                  </div>\r\n                 \r\n                  <div className=\"input-field\">\r\n                    <i className=\"material-icons prefix\">lock</i>\r\n                    <input \r\n                    className=\"validate\"\r\n                     placeholder=\"Enter Password\"\r\n                    id=\"password\" \r\n                    type=\"password\"\r\n                    name=\"password\"\r\n                    value={this.state.password}\r\n                    onChange={this.handleChange}\r\n                    />\r\n                  <div style={{ color : \"red\" }}>\r\n                    {this.state.passwordError}\r\n                  </div>\r\n                    <label htmlFor=\"password\">Password</label>\r\n                  </div>\r\n   \r\n                   <div >\r\n                    <label>\r\n                     &nbsp;<button style={{width:100}} className=\"waves-effect waves-light btn blue\">Sign In</button>\r\n                    </label>\r\n                  </div><br />\r\n   \r\n               </div>\r\n            </div>\r\n         </div>\r\n       </div>\r\n         </form>\r\n     </Fragment>\r\n       )\r\n    }\r\n}\r\n  export default Login;"]},"metadata":{},"sourceType":"module"}