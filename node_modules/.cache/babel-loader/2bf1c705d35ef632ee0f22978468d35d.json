{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Marquis\\\\quiz-only\\\\project\\\\src\\\\components\\\\quiz\\\\play.js\";\nimport React, { Component, Fragment } from 'react';\nimport { Helmet } from 'react-helmet';\nimport M from 'materialize-css';\nimport questions from '../../questions.json';\nimport isEmpty from '../../utils/is-Empty';\nimport correctNotification from '../../assets/audio/correct-answer.mp3';\nimport wrongNotification from '../../assets/audio/wrong-answer.mp3';\nimport buttonSound from '../../assets/audio/button-sound.mp3';\n\nclass Play extends Component {\n  constructor(props) {\n    super(props);\n\n    this.displayQuestions = (questions = this.state.questions, currentQuestion, nextQuestion, previousQuestion) => {\n      let {\n        currentQuestionIndex\n      } = this.state;\n\n      if (!isEmpty(this.state.questions)) {\n        questions = this.state.questions;\n        currentQuestion = questions[currentQuestionIndex];\n        nextQuestion = questions[currentQuestionIndex + 1];\n        previousQuestion = questions[currentQuestionIndex - 1];\n        const answer = currentQuestion.answer;\n        this.setState({\n          currentQuestion,\n          nextQuestion,\n          previousQuestion,\n          numberOfQuestions: questions.length,\n          answer,\n          previousRandomNumbers: []\n        }, () => {\n          this.showOptions();\n        });\n      }\n    };\n\n    this.handleOptionClick = e => {\n      if (e.target.innerHTML.toLowerCase() === this.state.answer.toLowerCase()) {\n        setTimeout(() => {\n          document.getElementById('correct-sound').play();\n        }, 500);\n        this.correctAnswer();\n      } else {\n        setTimeout(() => {\n          document.getElementById('wrong-sound').play();\n        }, 500);\n        this.wrongAnswer();\n      }\n    };\n\n    this.handleNextButtonClick = () => {\n      this.playButtonSound();\n\n      if (this.state.nextQuestion !== undefined) {\n        this.setState(prevState => ({\n          currentQuestionIndex: prevState.currentQuestionIndex + 1\n        }), () => {\n          this.displayQuestions(this.state.state, this.state.currentQuestion, this.state.nextQuestion, this.state.previousQuestion);\n        });\n      }\n    };\n\n    this.handlePreviousButtonClick = () => {\n      this.playButtonSound();\n\n      if (this.state.previousQuestion !== undefined) {\n        this.setState(prevState => ({\n          currentQuestionIndex: prevState.currentQuestionIndex - 1\n        }), () => {\n          this.displayQuestions(this.state.question, this.state.currentQuestion, this.state.nextQuestion, this.state.previousQuestion);\n        });\n      }\n    };\n\n    this.handleQuitButtonClick = () => {\n      this.playButtonSound();\n\n      if (window.confirm('Are you sure you want to quit?')) {\n        this.props.history.push('/');\n      }\n    };\n\n    this.handleButtonClick = eve => {\n      switch (e.target.id) {\n        case 'next-button':\n          this.handleNextButtonClick();\n          break;\n\n        case 'previous-button':\n          this.handlePreviousButtonClick();\n          break;\n\n        case 'quit-button':\n          this.handleQuitButtonClick();\n          break;\n\n        default:\n          break;\n      }\n    };\n\n    this.playButtonSound = () => {\n      document.getElementById('button-sound').play();\n    };\n\n    this.correctAnswer = () => {\n      M.toast({\n        html: \"Correct Answer!\",\n        classes: \"tost-valid\",\n        displayLength: 1500\n      });\n      this.setState(prevState => ({\n        score: prevState.score + 1,\n        correctAnswers: prevState.correctAnswers + 1,\n        currentQuestionIndex: prevState.currentQuestionIndex + 1,\n        numberOfAnsweredQuestions: prevState.numberOfAnsweredQuestions + 1\n      }), () => {\n        this.displayQuestions(this.state.questions, this.state.currentQuestion, this.state.nextQuestion, this.state.previousQuestion);\n      });\n    };\n\n    this.wrongAnswer = () => {\n      navigator.vibrate(1000);\n      M.toast({\n        html: \"Wrong Answer!\",\n        classes: \"tost-invalid\",\n        displayLength: 1500\n      });\n      this.setState(prevState => ({\n        wrongAnswers: prevState.wrongAnswers + 1,\n        currentQuestionIndex: prevState.currentQuestionIndex + 1,\n        numberOfAnsweredQuestions: prevState.numberOfAnsweredQuestions + 1\n      }), () => {\n        this.displayQuestions(this.state.questions, this.state.currentQuestion, this.state.nextQuestion, this.state.previousQuestion);\n      });\n    };\n\n    this.showOptions = () => {\n      const options = Array.from(document.querySelectorAll('.option'));\n      options.forEach(option => {\n        option.style.visibility = \"visible\";\n      });\n      this.setState({\n        usedFiftyFifty: false\n      });\n    };\n\n    this.handleHints = () => {\n      if (this.state.hints > 0) {\n        const options = Array.from(document.querySelectorAll('.option'));\n        let indexOfAnswer;\n        options.forEach((option, index) => {\n          if (option.innerHTML.toLowerCase() === this.state.answer.toLowerCase()) {\n            indexOfAnswer = index;\n          }\n        });\n\n        while (true) {\n          const randomNumber = Math.round(Math.random() * 3);\n\n          if (randomNumber !== indexOfAnswer && !this.state.previousRandomNumbers.includes(randomNumber)) {\n            options.forEach((option, index) => {\n              if (index === randomNumber) {\n                option.style.visibility = \"hidden\";\n                this.setState(prevState => ({\n                  hints: prevState.hints - 1,\n                  previousRandomNumbers: prevState.previousRandomNumbers.concat(randomNumber)\n                }));\n              }\n            });\n            break;\n          }\n\n          if (this.state.previousRandomNumbers.length >= 3) break;\n        }\n      }\n    };\n\n    this.handleFiftyFifty = () => {\n      /* alert('Fifty fifty clicked'); */\n\n      /* if (this.state.fiftyFifty > 0 && this.usedFiftyFifty === false){\r\n         const options = document.querySelectorAll('.option');\r\n         const randomNumbers = [];   \r\n         let indexOfAnswer;\r\n           options.forEach((option, index) => {\r\n             if(option.innerHTML.toLowerCase() === this.state.answer.toLowerCase()){\r\n             indexOfAnswer = index;\r\n           }\r\n         });\r\n      \n         let count = 0;\r\n         do {\r\n             const randomNumber = Math.round(Math.random() * 3);\r\n             if(randomNumber !== indexOfAnswer){\r\n             if(randomNumbers.length < 2 && !randomNumbers.includes(randomNumber) && !randomNumbers.includes(indexOfAnswer)){\r\n                 randomNumbers.push(randomNumber);  \r\n                 count ++;\r\n               }else{\r\n                   while(true){\r\n                     const newRandomNumber = Math.round(Math.random() * 3);\r\n                     if(!randomNumbers.includes(newRandomNumber) && !randomNumbers.includes(indexOfAnswer)){\r\n                         randomNumbers.push(newRandomNumber);\r\n                         count ++;\r\n                         break;\r\n                     }\r\n                   }\r\n               }\r\n             }\r\n         } while (count < 2);\r\n         options.forEach((option, index) => {\r\n             if(randomNumbers.includes(index)){\r\n                 option.style.visibility = \"hidden\"; \r\n             }\r\n         });\r\n         this.setState( prevState => ({\r\n             fiftyFifty: prevState.fiftyFifty - 1,\r\n             usedFiftyFifty: true\r\n         }))\r\n      }     */\n    };\n\n    this.state = {\n      questions,\n      currentQuestion: {},\n      nextQuestion: {},\n      previousQuestion: {},\n      answer: '',\n      numberOfQuestions: 0,\n      numberOfAnsweredQuestions: 0,\n      currentQuestionIndex: 0,\n      correctAnswers: 0,\n      wrongAnswers: 0,\n      score: 0,\n      hints: 5,\n      fiftyFifty: 2,\n      usedFiftyFifty: false,\n      previousRandomNumbers: [],\n      time: {}\n    };\n  }\n\n  componentDidMount() {\n    const {\n      questions,\n      currentQuestion,\n      nextQuestion,\n      previousQuestion\n    } = this.state;\n    this.displayQuestions(questions, currentQuestion, nextQuestion, previousQuestion);\n  }\n\n  render() {\n    const {\n      currentQuestion,\n      currentQuestionIndex,\n      numberOfQuestions,\n      hints,\n      fiftyFifty\n    } = this.state;\n    return /*#__PURE__*/React.createElement(Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 14\n      }\n    }, /*#__PURE__*/React.createElement(Helmet, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"title\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 25\n      }\n    }, \"Nimelssa quiz page\")), /*#__PURE__*/React.createElement(Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"audio\", {\n      id: \"correct-sound\",\n      src: correctNotification,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"audio\", {\n      id: \"wrong-sound\",\n      src: wrongNotification,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"audio\", {\n      id: \"button-sound\",\n      src: buttonSound,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"questions\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 21\n      }\n    }, \"Quiz Mode\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"lifeline-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      onClick: this.handleFiftyFifty,\n      className: \"mdi mdi-set-center mdi-24px lifeline-icon\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"lifeline\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 33\n      }\n    }, fiftyFifty))), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      onClick: this.handleHints,\n      className: \"mdi mdi-lightbulb-on-outline mdi-24px lifeline-icon\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"lifeline\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 31\n      }\n    }, hints)))), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"left\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 21\n      }\n    }, currentQuestionIndex + 1, \" of \", numberOfQuestions), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"right\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 21\n      }\n    }, \" 2 : 15\", /*#__PURE__*/React.createElement(\"span\", {\n      className: \"mdi mdi-clock-outline mdi-24px\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 52\n      }\n    })))), /*#__PURE__*/React.createElement(\"h5\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 17\n      }\n    }, currentQuestion.question), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"options-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 18\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      onClick: this.handleOptionClick,\n      className: \"option\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 21\n      }\n    }, currentQuestion.optionA), /*#__PURE__*/React.createElement(\"p\", {\n      onClick: this.handleOptionClick,\n      className: \"option\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 21\n      }\n    }, currentQuestion.optionB)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"options-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 18\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      onClick: this.handleOptionClick,\n      className: \"option\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 21\n      }\n    }, currentQuestion.optionC), /*#__PURE__*/React.createElement(\"p\", {\n      onClick: this.handleOptionClick,\n      className: \"option\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 21\n      }\n    }, currentQuestion.optionD)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"button-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 18\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      id: \"previous-button\",\n      onClick: this.handleButtonClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 22\n      }\n    }, \"Previous\"), /*#__PURE__*/React.createElement(\"button\", {\n      id: \"next-button\",\n      onClick: this.handleButtonClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 22\n      }\n    }, \"Next\"), /*#__PURE__*/React.createElement(\"button\", {\n      id: \"quit-button\",\n      onClick: this.handleButtonClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 22\n      }\n    }, \"Quit\"))));\n  }\n\n}\n\nexport default Play;","map":{"version":3,"sources":["C:/Users/Marquis/quiz-only/project/src/components/quiz/play.js"],"names":["React","Component","Fragment","Helmet","M","questions","isEmpty","correctNotification","wrongNotification","buttonSound","Play","constructor","props","displayQuestions","state","currentQuestion","nextQuestion","previousQuestion","currentQuestionIndex","answer","setState","numberOfQuestions","length","previousRandomNumbers","showOptions","handleOptionClick","e","target","innerHTML","toLowerCase","setTimeout","document","getElementById","play","correctAnswer","wrongAnswer","handleNextButtonClick","playButtonSound","undefined","prevState","handlePreviousButtonClick","question","handleQuitButtonClick","window","confirm","history","push","handleButtonClick","eve","id","toast","html","classes","displayLength","score","correctAnswers","numberOfAnsweredQuestions","navigator","vibrate","wrongAnswers","options","Array","from","querySelectorAll","forEach","option","style","visibility","usedFiftyFifty","handleHints","hints","indexOfAnswer","index","randomNumber","Math","round","random","includes","concat","handleFiftyFifty","fiftyFifty","time","componentDidMount","render","optionA","optionB","optionC","optionD"],"mappings":";AAAC,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,MAAT,QAAuB,cAAvB;AACA,OAAOC,CAAP,MAAc,iBAAd;AACA,OAAOC,SAAP,MAAsB,sBAAtB;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAOC,mBAAP,MAAgC,uCAAhC;AACA,OAAOC,iBAAP,MAA8B,qCAA9B;AACA,OAAOC,WAAP,MAAwB,qCAAxB;;AAEA,MAAMC,IAAN,SAAmBT,SAAnB,CAA6B;AACzBU,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;;AADc,SAsBtBC,gBAtBsB,GAsBH,CAACR,SAAS,GAAG,KAAKS,KAAL,CAAWT,SAAxB,EAAmCU,eAAnC,EAAoDC,YAApD,EAAkEC,gBAAlE,KAAuF;AAC3G,UAAI;AAAEC,QAAAA;AAAF,UAA2B,KAAKJ,KAApC;;AACA,UAAG,CAACR,OAAO,CAAC,KAAKQ,KAAL,CAAWT,SAAZ,CAAX,EAAkC;AAC9BA,QAAAA,SAAS,GAAG,KAAKS,KAAL,CAAWT,SAAvB;AACAU,QAAAA,eAAe,GAAGV,SAAS,CAACa,oBAAD,CAA3B;AACAF,QAAAA,YAAY,GAAGX,SAAS,CAACa,oBAAoB,GAAG,CAAxB,CAAxB;AACAD,QAAAA,gBAAgB,GAAGZ,SAAS,CAACa,oBAAoB,GAAG,CAAxB,CAA5B;AACA,cAAMC,MAAM,GAAGJ,eAAe,CAACI,MAA/B;AACA,aAAKC,QAAL,CAAc;AACVL,UAAAA,eADU;AAEVC,UAAAA,YAFU;AAGVC,UAAAA,gBAHU;AAIVI,UAAAA,iBAAiB,EAAEhB,SAAS,CAACiB,MAJnB;AAKVH,UAAAA,MALU;AAMVI,UAAAA,qBAAqB,EAAE;AANb,SAAd,EAOF,MAAM;AACR,eAAKC,WAAL;AACC,SATG;AAUD;AACE,KAzCkB;;AAAA,SA2CvBC,iBA3CuB,GA2CFC,CAAD,IAAM;AACvB,UAAGA,CAAC,CAACC,MAAF,CAASC,SAAT,CAAmBC,WAAnB,OAAqC,KAAKf,KAAL,CAAWK,MAAX,CAAkBU,WAAlB,EAAxC,EAAwE;AACpEC,QAAAA,UAAU,CAAC,MAAM;AAChBC,UAAAA,QAAQ,CAACC,cAAT,CAAwB,eAAxB,EAAyCC,IAAzC;AACA,SAFS,EAEP,GAFO,CAAV;AAGA,aAAKC,aAAL;AACH,OALD,MAKK;AACDJ,QAAAA,UAAU,CAAC,MAAM;AAChBC,UAAAA,QAAQ,CAACC,cAAT,CAAwB,aAAxB,EAAuCC,IAAvC;AACA,SAFS,EAEP,GAFO,CAAV;AAGA,aAAKE,WAAL;AACH;AACH,KAvDsB;;AAAA,SAyDvBC,qBAzDuB,GAyDC,MAAK;AACzB,WAAKC,eAAL;;AACJ,UAAG,KAAKvB,KAAL,CAAWE,YAAX,KAA4BsB,SAA/B,EAAyC;AACrC,aAAKlB,QAAL,CAAcmB,SAAS,KAAK;AACxBrB,UAAAA,oBAAoB,EAAEqB,SAAS,CAACrB,oBAAV,GAAiC;AAD/B,SAAL,CAAvB,EAEI,MAAM;AACN,eAAKL,gBAAL,CAAsB,KAAKC,KAAL,CAAWA,KAAjC,EAAwC,KAAKA,KAAL,CAAWC,eAAnD,EAAoE,KAAKD,KAAL,CAAWE,YAA/E,EAA6F,KAAKF,KAAL,CAAWG,gBAAxG;AACH,SAJD;AAKH;AACA,KAlEsB;;AAAA,SAoEvBuB,yBApEuB,GAoEK,MAAK;AAC7B,WAAKH,eAAL;;AACJ,UAAG,KAAKvB,KAAL,CAAWG,gBAAX,KAAgCqB,SAAnC,EAA6C;AACzC,aAAKlB,QAAL,CAAcmB,SAAS,KAAK;AACxBrB,UAAAA,oBAAoB,EAAEqB,SAAS,CAACrB,oBAAV,GAAiC;AAD/B,SAAL,CAAvB,EAEI,MAAM;AACN,eAAKL,gBAAL,CAAsB,KAAKC,KAAL,CAAW2B,QAAjC,EAA2C,KAAK3B,KAAL,CAAWC,eAAtD,EAAuE,KAAKD,KAAL,CAAWE,YAAlF,EAAgG,KAAKF,KAAL,CAAWG,gBAA3G;AACH,SAJD;AAKH;AACA,KA7EsB;;AAAA,SA+EvByB,qBA/EuB,GA+EC,MAAM;AAC1B,WAAKL,eAAL;;AACH,UAAGM,MAAM,CAACC,OAAP,CAAe,gCAAf,CAAH,EAAoD;AAChD,aAAKhC,KAAL,CAAWiC,OAAX,CAAmBC,IAAnB,CAAwB,GAAxB;AACD;AACH,KApFsB;;AAAA,SAqFvBC,iBArFuB,GAqFFC,GAAD,IAAS;AACzB,cAAQtB,CAAC,CAACC,MAAF,CAASsB,EAAjB;AACI,aAAK,aAAL;AACI,eAAKb,qBAAL;AACA;;AACJ,aAAK,iBAAL;AACI,eAAKI,yBAAL;AACA;;AACJ,aAAK,aAAL;AACI,eAAKE,qBAAL;AACA;;AACJ;AACI;AAXR;AAaH,KAnGsB;;AAAA,SAqGvBL,eArGuB,GAqGL,MAAM;AACpBN,MAAAA,QAAQ,CAACC,cAAT,CAAwB,cAAxB,EAAwCC,IAAxC;AACH,KAvGsB;;AAAA,SAwGvBC,aAxGuB,GAwGP,MAAK;AACjB9B,MAAAA,CAAC,CAAC8C,KAAF,CAAQ;AACJC,QAAAA,IAAI,EAAC,iBADD;AAEJC,QAAAA,OAAO,EAAE,YAFL;AAGJC,QAAAA,aAAa,EAAC;AAHV,OAAR;AAKA,WAAKjC,QAAL,CAAemB,SAAD,KAAgB;AAC1Be,QAAAA,KAAK,EAACf,SAAS,CAACe,KAAV,GAAkB,CADE;AAE1BC,QAAAA,cAAc,EAAChB,SAAS,CAACgB,cAAV,GAA2B,CAFhB;AAG1BrC,QAAAA,oBAAoB,EAACqB,SAAS,CAACrB,oBAAV,GAAiC,CAH5B;AAI1BsC,QAAAA,yBAAyB,EAACjB,SAAS,CAACiB,yBAAV,GAAsC;AAJtC,OAAhB,CAAd,EAKI,MAAM;AACN,aAAK3C,gBAAL,CAAsB,KAAKC,KAAL,CAAWT,SAAjC,EAA4C,KAAKS,KAAL,CAAWC,eAAvD,EAAwE,KAAKD,KAAL,CAAWE,YAAnF,EAAiG,KAAKF,KAAL,CAAWG,gBAA5G;AACH,OAPD;AAQH,KAtHsB;;AAAA,SAwHvBkB,WAxHuB,GAwHT,MAAK;AACfsB,MAAAA,SAAS,CAACC,OAAV,CAAkB,IAAlB;AACAtD,MAAAA,CAAC,CAAC8C,KAAF,CAAQ;AACJC,QAAAA,IAAI,EAAC,eADD;AAEJC,QAAAA,OAAO,EAAE,cAFL;AAGJC,QAAAA,aAAa,EAAC;AAHV,OAAR;AAKA,WAAKjC,QAAL,CAAemB,SAAD,KAAgB;AAC1BoB,QAAAA,YAAY,EAACpB,SAAS,CAACoB,YAAV,GAAyB,CADZ;AAE1BzC,QAAAA,oBAAoB,EAAEqB,SAAS,CAACrB,oBAAV,GAAiC,CAF7B;AAG1BsC,QAAAA,yBAAyB,EAAEjB,SAAS,CAACiB,yBAAV,GAAsC;AAHvC,OAAhB,CAAd,EAII,MAAM;AACN,aAAK3C,gBAAL,CAAsB,KAAKC,KAAL,CAAWT,SAAjC,EAA4C,KAAKS,KAAL,CAAWC,eAAvD,EAAwE,KAAKD,KAAL,CAAWE,YAAnF,EAAiG,KAAKF,KAAL,CAAWG,gBAA5G;AACH,OAND;AAOH,KAtIsB;;AAAA,SA6ItBO,WA7IsB,GA6IR,MAAM;AACjB,YAAMoC,OAAO,GAAGC,KAAK,CAACC,IAAN,CAAW/B,QAAQ,CAACgC,gBAAT,CAA0B,SAA1B,CAAX,CAAhB;AAECH,MAAAA,OAAO,CAACI,OAAR,CAAiBC,MAAD,IAAY;AAC5BA,QAAAA,MAAM,CAACC,KAAP,CAAaC,UAAb,GAA0B,SAA1B;AACC,OAFD;AAGD,WAAK/C,QAAL,CAAc;AACVgD,QAAAA,cAAc,EAAE;AADN,OAAd;AAGF,KAtJqB;;AAAA,SAwJtBC,WAxJsB,GAwJR,MAAM;AAChB,UAAG,KAAKvD,KAAL,CAAWwD,KAAX,GAAmB,CAAtB,EAAwB;AACrB,cAAMV,OAAO,GAAGC,KAAK,CAACC,IAAN,CAAW/B,QAAQ,CAACgC,gBAAT,CAA0B,SAA1B,CAAX,CAAhB;AACA,YAAIQ,aAAJ;AAEAX,QAAAA,OAAO,CAACI,OAAR,CAAgB,CAACC,MAAD,EAASO,KAAT,KAAmB;AAC/B,cAAGP,MAAM,CAACrC,SAAP,CAAiBC,WAAjB,OAAmC,KAAKf,KAAL,CAAWK,MAAX,CAAkBU,WAAlB,EAAtC,EAAsE;AACtE0C,YAAAA,aAAa,GAAGC,KAAhB;AACG;AACF,SAJL;;AAMI,eAAO,IAAP,EAAa;AACX,gBAAMC,YAAY,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,CAA3B,CAArB;;AACE,cAAGH,YAAY,KAAKF,aAAjB,IAAkC,CAAC,KAAKzD,KAAL,CAAWS,qBAAX,CAAiCsD,QAAjC,CAA0CJ,YAA1C,CAAtC,EAA8F;AAC3Fb,YAAAA,OAAO,CAACI,OAAR,CAAgB,CAACC,MAAD,EAASO,KAAT,KAAmB;AACjC,kBAAGA,KAAK,KAAKC,YAAb,EAA0B;AACvBR,gBAAAA,MAAM,CAACC,KAAP,CAAaC,UAAb,GAA0B,QAA1B;AACA,qBAAK/C,QAAL,CAAemB,SAAD,KAAgB;AAC1B+B,kBAAAA,KAAK,EAAE/B,SAAS,CAAC+B,KAAV,GAAkB,CADC;AAE1B/C,kBAAAA,qBAAqB,EAAEgB,SAAS,CAAChB,qBAAV,CAAgCuD,MAAhC,CAAuCL,YAAvC;AAFG,iBAAhB,CAAd;AAIH;AACE,aARJ;AASK;AACN;;AACF,cAAG,KAAK3D,KAAL,CAAWS,qBAAX,CAAiCD,MAAjC,IAA2C,CAA9C,EAAiD;AACpD;AACP;AACL,KApLsB;;AAAA,SAsLvByD,gBAtLuB,GAsLJ,MAAM;AACrB;;AACC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwCJ,KAhOsB;;AAEvB,SAAKjE,KAAL,GAAa;AACTT,MAAAA,SADS;AAETU,MAAAA,eAAe,EAAC,EAFP;AAGTC,MAAAA,YAAY,EAAC,EAHJ;AAITC,MAAAA,gBAAgB,EAAC,EAJR;AAKTE,MAAAA,MAAM,EAAC,EALE;AAMTE,MAAAA,iBAAiB,EAAC,CANT;AAOTmC,MAAAA,yBAAyB,EAAC,CAPjB;AAQTtC,MAAAA,oBAAoB,EAAC,CARZ;AASTqC,MAAAA,cAAc,EAAC,CATN;AAUTI,MAAAA,YAAY,EAAC,CAVJ;AAWTL,MAAAA,KAAK,EAAC,CAXG;AAYTgB,MAAAA,KAAK,EAAC,CAZG;AAaTU,MAAAA,UAAU,EAAC,CAbF;AAcTZ,MAAAA,cAAc,EAAC,KAdN;AAeT7C,MAAAA,qBAAqB,EAAC,EAfb;AAgBT0D,MAAAA,IAAI,EAAC;AAhBI,KAAb;AAkBI;;AAoHHC,EAAAA,iBAAiB,GAAG;AAChB,UAAM;AAAE7E,MAAAA,SAAF;AAAaU,MAAAA,eAAb;AAA8BC,MAAAA,YAA9B;AAA4CC,MAAAA;AAA5C,QAAiE,KAAKH,KAA5E;AACA,SAAKD,gBAAL,CAAsBR,SAAtB,EAAiCU,eAAjC,EAAkDC,YAAlD,EAAgEC,gBAAhE;AACH;;AAuFEkE,EAAAA,MAAM,GAAE;AACH,UAAM;AAAEpE,MAAAA,eAAF;AAAmBG,MAAAA,oBAAnB;AAAyCG,MAAAA,iBAAzC;AAA4DiD,MAAAA,KAA5D;AAAmEU,MAAAA;AAAnE,QAAkF,KAAKlE,KAA7F;AACA,wBACI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACG,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAAR,CADH,eAEG,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAO,MAAA,EAAE,EAAC,eAAV;AAA0B,MAAA,GAAG,EAAEP,mBAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,eAEI;AAAO,MAAA,EAAE,EAAC,aAAV;AAAwB,MAAA,GAAG,EAAEC,iBAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,eAGI;AAAO,MAAA,EAAE,EAAC,cAAV;AAAyB,MAAA,GAAG,EAAEC,WAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHJ,CAFH,eAOG;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADJ,eAEA;AAAK,MAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAM,MAAA,OAAO,EAAE,KAAKsE,gBAApB;AAAsC,MAAA,SAAS,EAAC,2CAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACQ;AAAM,MAAA,SAAS,EAAC,UAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA4BC,UAA5B,CADR,CADJ,CADJ,eAMI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAM,MAAA,OAAO,EAAE,KAAKX,WAApB;AAAiC,MAAA,SAAS,EAAC,qDAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACM;AAAM,MAAA,SAAS,EAAC,UAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA4BC,KAA5B,CADN,CADJ,CANJ,CAFA,eAcA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACA;AAAM,MAAA,SAAS,EAAC,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAwBpD,oBAAoB,GAAG,CAA/C,UAAsDG,iBAAtD,CADA,eAEA;AAAM,MAAA,SAAS,EAAC,OAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAA+B;AAAM,MAAA,SAAS,EAAC,gCAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAA/B,CAFA,CADJ,CAdA,eAoBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKN,eAAe,CAAC0B,QAArB,CApBA,eAqBC;AAAK,MAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACG;AAAG,MAAA,OAAO,EAAE,KAAKhB,iBAAjB;AAAoC,MAAA,SAAS,EAAC,QAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAwDV,eAAe,CAACqE,OAAxE,CADH,eAEG;AAAG,MAAA,OAAO,EAAE,KAAK3D,iBAAjB;AAAoC,MAAA,SAAS,EAAC,QAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAwDV,eAAe,CAACsE,OAAxE,CAFH,CArBD,eAyBC;AAAK,MAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACG;AAAG,MAAA,OAAO,EAAE,KAAK5D,iBAAjB;AAAoC,MAAA,SAAS,EAAC,QAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAwDV,eAAe,CAACuE,OAAxE,CADH,eAEG;AAAG,MAAA,OAAO,EAAE,KAAK7D,iBAAjB;AAAoC,MAAA,SAAS,EAAC,QAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAwDV,eAAe,CAACwE,OAAxE,CAFH,CAzBD,eA6BC;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAQ,MAAA,EAAE,EAAC,iBAAX;AAA6B,MAAA,OAAO,EAAE,KAAKxC,iBAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAQ,MAAA,EAAE,EAAC,aAAX;AAA0B,MAAA,OAAO,EAAE,KAAKA,iBAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI;AAAQ,MAAA,EAAE,EAAC,aAAX;AAA0B,MAAA,OAAO,EAAE,KAAKA,iBAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHJ,CA7BD,CAPH,CADJ;AA8CH;;AAnRwB;;AAsR7B,eAAerC,IAAf","sourcesContent":[" import React, { Component, Fragment } from 'react';\r\n import { Helmet } from 'react-helmet';\r\n import M from 'materialize-css';\r\n import questions from '../../questions.json';\r\n import isEmpty from '../../utils/is-Empty';\r\n import correctNotification from '../../assets/audio/correct-answer.mp3';\r\n import wrongNotification from '../../assets/audio/wrong-answer.mp3';\r\n import buttonSound from '../../assets/audio/button-sound.mp3';\r\n\r\n class Play extends Component {\r\n     constructor(props){\r\n         super(props);\r\nthis.state = {\r\n    questions,\r\n    currentQuestion:{},\r\n    nextQuestion:{},\r\n    previousQuestion:{},\r\n    answer:'',\r\n    numberOfQuestions:0,\r\n    numberOfAnsweredQuestions:0,\r\n    currentQuestionIndex:0,\r\n    correctAnswers:0,\r\n    wrongAnswers:0,\r\n    score:0,\r\n    hints:5,\r\n    fiftyFifty:2,\r\n    usedFiftyFifty:false,\r\n    previousRandomNumbers:[],\r\n    time:{}\r\n}\r\n   }\r\n  \r\n displayQuestions = (questions = this.state.questions, currentQuestion, nextQuestion, previousQuestion) => {\r\nlet { currentQuestionIndex } = this.state;\r\nif(!isEmpty(this.state.questions)){\r\n    questions = this.state.questions;\r\n    currentQuestion = questions[currentQuestionIndex];\r\n    nextQuestion = questions[currentQuestionIndex + 1];\r\n    previousQuestion = questions[currentQuestionIndex - 1];\r\n    const answer = currentQuestion.answer;\r\n    this.setState({\r\n        currentQuestion,\r\n        nextQuestion,\r\n        previousQuestion,\r\n        numberOfQuestions: questions.length,\r\n        answer,\r\n        previousRandomNumbers: []\r\n},() => { \r\nthis.showOptions();\r\n});\r\n  }\r\n    }  \r\n   \r\nhandleOptionClick = (e) =>{\r\n   if(e.target.innerHTML.toLowerCase() === this.state.answer.toLowerCase()){\r\n       setTimeout(() => {\r\n        document.getElementById('correct-sound').play();\r\n       }, 500)\r\n       this.correctAnswer();\r\n   }else{\r\n       setTimeout(() => {\r\n        document.getElementById('wrong-sound').play();\r\n       }, 500)\r\n       this.wrongAnswer();\r\n   }\r\n}    \r\n\r\nhandleNextButtonClick = () =>{\r\n    this.playButtonSound();\r\nif(this.state.nextQuestion !== undefined){\r\n    this.setState(prevState => ({\r\n        currentQuestionIndex: prevState.currentQuestionIndex + 1\r\n    }), () => {\r\n        this.displayQuestions(this.state.state, this.state.currentQuestion, this.state.nextQuestion, this.state.previousQuestion)\r\n    })\r\n}\r\n}\r\n\r\nhandlePreviousButtonClick = () =>{\r\n    this.playButtonSound();\r\nif(this.state.previousQuestion !== undefined){\r\n    this.setState(prevState => ({\r\n        currentQuestionIndex: prevState.currentQuestionIndex - 1\r\n    }), () => {\r\n        this.displayQuestions(this.state.question, this.state.currentQuestion, this.state.nextQuestion, this.state.previousQuestion)\r\n    })\r\n}\r\n}\r\n\r\nhandleQuitButtonClick = () => {\r\n    this.playButtonSound();\r\n if(window.confirm('Are you sure you want to quit?')){\r\n     this.props.history.push('/');\r\n   }\r\n}\r\nhandleButtonClick = (eve) => {\r\n    switch (e.target.id) {\r\n        case 'next-button':\r\n            this.handleNextButtonClick();\r\n            break;\r\n        case 'previous-button':\r\n            this.handlePreviousButtonClick();\r\n            break;\r\n        case 'quit-button':\r\n            this.handleQuitButtonClick();\r\n            break;\r\n        default:\r\n            break;\r\n    }\r\n}\r\n\r\nplayButtonSound = () => {\r\n    document.getElementById('button-sound').play();\r\n}\r\ncorrectAnswer = () =>{\r\n    M.toast({\r\n        html:\"Correct Answer!\",\r\n        classes: \"tost-valid\",\r\n        displayLength:1500\r\n    })\r\n    this.setState((prevState) => ({\r\n        score:prevState.score + 1,\r\n        correctAnswers:prevState.correctAnswers + 1,\r\n        currentQuestionIndex:prevState.currentQuestionIndex + 1,\r\n        numberOfAnsweredQuestions:prevState.numberOfAnsweredQuestions + 1\r\n    }), () => {\r\n        this.displayQuestions(this.state.questions, this.state.currentQuestion, this.state.nextQuestion, this.state.previousQuestion)\r\n    })\r\n}\r\n\r\nwrongAnswer = () =>{\r\n    navigator.vibrate(1000);\r\n    M.toast({\r\n        html:\"Wrong Answer!\",\r\n        classes: \"tost-invalid\",\r\n        displayLength:1500\r\n    })\r\n    this.setState((prevState) => ({\r\n        wrongAnswers:prevState.wrongAnswers + 1,\r\n        currentQuestionIndex: prevState.currentQuestionIndex + 1,\r\n        numberOfAnsweredQuestions: prevState.numberOfAnsweredQuestions + 1\r\n    }), () => {\r\n        this.displayQuestions(this.state.questions, this.state.currentQuestion, this.state.nextQuestion, this.state.previousQuestion)\r\n    })\r\n}\r\n\r\n componentDidMount (){\r\n     const { questions, currentQuestion, nextQuestion, previousQuestion } = this.state;\r\n     this.displayQuestions(questions, currentQuestion, nextQuestion, previousQuestion ); \r\n }\r\n\r\n showOptions = () => {\r\n    const options = Array.from(document.querySelectorAll('.option'));\r\n\r\n     options.forEach((option) => {\r\n     option.style.visibility = \"visible\";\r\n     })\r\n    this.setState({\r\n        usedFiftyFifty: false\r\n    })\r\n }\r\n\r\n handleHints = () => {\r\n     if(this.state.hints > 0){\r\n        const options = Array.from(document.querySelectorAll('.option'));\r\n        let indexOfAnswer;\r\n    \r\n        options.forEach((option, index) => {\r\n            if(option.innerHTML.toLowerCase() === this.state.answer.toLowerCase()){\r\n            indexOfAnswer = index;\r\n              }\r\n            });\r\n            \r\n            while (true) {\r\n              const randomNumber = Math.round(Math.random() * 3);\r\n                if(randomNumber !== indexOfAnswer && !this.state.previousRandomNumbers.includes(randomNumber)){\r\n                   options.forEach((option, index) => {\r\n                     if(index === randomNumber){\r\n                        option.style.visibility = \"hidden\";\r\n                        this.setState((prevState) => ({\r\n                            hints: prevState.hints - 1,\r\n                            previousRandomNumbers: prevState.previousRandomNumbers.concat(randomNumber)\r\n                        }));\r\n                    }\r\n                      });\r\n                        break;\r\n                 }\r\n                if(this.state.previousRandomNumbers.length >= 3) break;\r\n            }\r\n     }\r\n}\r\n \r\nhandleFiftyFifty = () => {\r\n    /* alert('Fifty fifty clicked'); */\r\n     /* if (this.state.fiftyFifty > 0 && this.usedFiftyFifty === false){\r\n        const options = document.querySelectorAll('.option');\r\n        const randomNumbers = [];   \r\n        let indexOfAnswer;\r\n\r\n        options.forEach((option, index) => {\r\n            if(option.innerHTML.toLowerCase() === this.state.answer.toLowerCase()){\r\n            indexOfAnswer = index;\r\n          }\r\n        });\r\n    \r\n        let count = 0;\r\n        do {\r\n            const randomNumber = Math.round(Math.random() * 3);\r\n            if(randomNumber !== indexOfAnswer){\r\n            if(randomNumbers.length < 2 && !randomNumbers.includes(randomNumber) && !randomNumbers.includes(indexOfAnswer)){\r\n                randomNumbers.push(randomNumber);  \r\n                count ++;\r\n              }else{\r\n                  while(true){\r\n                    const newRandomNumber = Math.round(Math.random() * 3);\r\n                    if(!randomNumbers.includes(newRandomNumber) && !randomNumbers.includes(indexOfAnswer)){\r\n                        randomNumbers.push(newRandomNumber);\r\n                        count ++;\r\n                        break;\r\n                    }\r\n                  }\r\n              }\r\n            }\r\n        } while (count < 2);\r\n        options.forEach((option, index) => {\r\n            if(randomNumbers.includes(index)){\r\n                option.style.visibility = \"hidden\"; \r\n            }\r\n        });\r\n        this.setState( prevState => ({\r\n            fiftyFifty: prevState.fiftyFifty - 1,\r\n            usedFiftyFifty: true\r\n        }))\r\n    }     */ \r\n}    \r\n\r\n    render(){\r\n         const { currentQuestion, currentQuestionIndex, numberOfQuestions, hints, fiftyFifty } = this.state;\r\n         return(\r\n             <Fragment>\r\n                <Helmet><title>Nimelssa quiz page</title></Helmet>\r\n                <Fragment>\r\n                    <audio id=\"correct-sound\" src={correctNotification}></audio>\r\n                    <audio id=\"wrong-sound\" src={wrongNotification}></audio>\r\n                    <audio id=\"button-sound\" src={buttonSound}></audio>\r\n                </Fragment>\r\n                <div className=\"questions\">\r\n                    <h2>Quiz Mode</h2>\r\n                <div className=\"lifeline-container\">\r\n                    <p>\r\n                        <span onClick={this.handleFiftyFifty} className='mdi mdi-set-center mdi-24px lifeline-icon'>\r\n                                <span className=\"lifeline\">{fiftyFifty}</span>\r\n                        </span>\r\n                    </p>\r\n                    <p>\r\n                        <span onClick={this.handleHints} className=\"mdi mdi-lightbulb-on-outline mdi-24px lifeline-icon\">\r\n                              <span className=\"lifeline\">{hints}</span>\r\n                        </span>\r\n                    </p>\r\n                </div>\r\n                <div>\r\n                    <p>\r\n                    <span className=\"left\">{currentQuestionIndex + 1} of {numberOfQuestions}</span>\r\n                    <span className=\"right\"> 2 : 15<span className=\"mdi mdi-clock-outline mdi-24px\"></span></span>\r\n                    </p>\r\n                </div>\r\n                <h5>{currentQuestion.question}</h5>\r\n                 <div className=\"options-container\">\r\n                    <p onClick={this.handleOptionClick} className=\"option\">{currentQuestion.optionA}</p>\r\n                    <p onClick={this.handleOptionClick} className=\"option\">{currentQuestion.optionB}</p>\r\n                 </div>\r\n                 <div className=\"options-container\">\r\n                    <p onClick={this.handleOptionClick} className=\"option\">{currentQuestion.optionC}</p>\r\n                    <p onClick={this.handleOptionClick} className=\"option\">{currentQuestion.optionD}</p>\r\n                 </div>\r\n                 <div className=\"button-container\">\r\n                     <button id=\"previous-button\" onClick={this.handleButtonClick}>Previous</button>\r\n                     <button id=\"next-button\"  onClick={this.handleButtonClick}>Next</button>\r\n                     <button id=\"quit-button\"  onClick={this.handleButtonClick}>Quit</button>\r\n                 </div>\r\n             </div>\r\n             </Fragment>\r\n         )\r\n         \r\n     }\r\n }\r\n\r\n export default Play;"]},"metadata":{},"sourceType":"module"}